[tool]
[tool.poetry]
name = "app"
version = "0.1.0"
description = ""
authors = [ "Marcus Schiesser <mail@marcusschiesser.de>" ]
readme = "README.md"

[tool.poetry.scripts]
generate = "app.engine.generate:generate_datasource"
dev = "run:dev"
prod = "run:prod"
build = "run:build"

[tool.poetry.dependencies]
python = ">=3.11,<3.14"
fastapi = "^0.109.1"
python-dotenv = "^1.0.0"
pydantic = "<2.10"
aiostream = "^0.5.2"
cachetools = "^5.3.3"
llama-index = "^0.12.1"
rich = "^13.9.4"

[tool.poetry.dependencies.uvicorn]
extras = [ "standard" ]
version = "^0.23.2"

[tool.poetry.dependencies.docx2txt]
version = "^0.8"

[tool.poetry.dependencies.llama-index-llms-openai]
version = "^0.3.2"

[tool.poetry.dependencies.llama-index-embeddings-openai]
version = "^0.3.1"

[tool.poetry.dependencies.llama-index-agent-openai]
version = "^0.4.0"

[tool.poetry.group]
[tool.poetry.group.dev]
[tool.poetry.group.dev.dependencies]
mypy = "^1.8.0"

[tool.mypy]
python_version = "3.11"
plugins = "pydantic.mypy"
exclude = [ "tests", "venv", ".venv", "output", "config" ]
check_untyped_defs = true
warn_unused_ignores = false
show_error_codes = true
namespace_packages = true
ignore_missing_imports = true
follow_imports = "silent"
implicit_optional = true
strict_optional = false
disable_error_code = [ "return-value", "assignment" ]

[[tool.mypy.overrides]]
module = "app.*"
ignore_missing_imports = false

[build-system]
requires = [ "poetry-core" ]
build-backend = "poetry.core.masonry.api"